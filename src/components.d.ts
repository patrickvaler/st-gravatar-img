/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface StGravatarImg {
      /**
       * Exposed Method to create md5 hash
       */
      'createHash': (value?: string) => any;
      /**
       * Gravatar email (will expose email).
       */
      'email': string;
      /**
       * MD5 hash of your gravatar email (avoid to expose email)
       */
      'hash': string;
      /**
       * Image size in pixel
       */
      'size': number;
    }
  }

  interface HTMLStGravatarImgElement extends StencilComponents.StGravatarImg, HTMLStencilElement {}

  var HTMLStGravatarImgElement: {
    prototype: HTMLStGravatarImgElement;
    new (): HTMLStGravatarImgElement;
  };
  interface HTMLElementTagNameMap {
    'st-gravatar-img': HTMLStGravatarImgElement;
  }
  interface ElementTagNameMap {
    'st-gravatar-img': HTMLStGravatarImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'st-gravatar-img': JSXElements.StGravatarImgAttributes;
    }
  }
  namespace JSXElements {
    export interface StGravatarImgAttributes extends HTMLAttributes {
      /**
       * Gravatar email (will expose email).
       */
      'email'?: string;
      /**
       * MD5 hash of your gravatar email (avoid to expose email)
       */
      'hash'?: string;
      /**
       * Image size in pixel
       */
      'size'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;